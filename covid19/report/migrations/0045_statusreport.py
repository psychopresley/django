# Generated by Django 3.1.5 on 2021-04-04 23:04

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('report', '0044_delete_statusreport'),
    ]

    operations = [
        migrations.CreateModel(
            name='StatusReport',
            fields=[
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='report.country')),
                ('date', models.DateField(default=datetime.date.today)),
                ('db_update', models.DateField(default=datetime.date.today)),
                ('confirmed', models.IntegerField()),
                ('confirmed_new', models.IntegerField()),
                ('confirmed_new_pct_change', models.FloatField(default=100)),
                ('confirmed_pct_change', models.FloatField()),
                ('confirmed_rank_region', models.IntegerField()),
                ('confirmed_rank_world', models.IntegerField()),
                ('confirmed_new_rank_region', models.IntegerField(default=0)),
                ('confirmed_new_rank_world', models.IntegerField(default=0)),
                ('confirmed_by_hundreds', models.FloatField(default=1)),
                ('confirmed_by_hundreds_rank_region', models.IntegerField(default=1)),
                ('confirmed_by_hundreds_rank_world', models.IntegerField(default=1)),
                ('deaths', models.IntegerField()),
                ('deaths_new', models.IntegerField()),
                ('deaths_new_pct_change', models.FloatField(default=100)),
                ('deaths_pct_change', models.FloatField()),
                ('deaths_rank_region', models.IntegerField()),
                ('deaths_rank_world', models.IntegerField()),
                ('deaths_new_rank_region', models.IntegerField(default=0)),
                ('deaths_new_rank_world', models.IntegerField(default=0)),
                ('deaths_by_hundreds', models.FloatField(default=1)),
                ('deaths_by_hundreds_rank_region', models.IntegerField(default=1)),
                ('deaths_by_hundreds_rank_world', models.IntegerField(default=1)),
                ('recovered', models.IntegerField(default=0)),
                ('recovered_new', models.IntegerField()),
                ('recovered_pct_change', models.FloatField()),
                ('recovered_rank_region', models.IntegerField()),
                ('recovered_rank_world', models.IntegerField()),
                ('recovered_new_rank_region', models.IntegerField(default=0)),
                ('recovered_new_rank_world', models.IntegerField(default=0)),
                ('recovered_by_hundreds', models.FloatField(default=1)),
                ('recovered_by_hundreds_rank_region', models.IntegerField(default=1)),
                ('recovered_by_hundreds_rank_world', models.IntegerField(default=1)),
                ('active', models.IntegerField(default=0)),
                ('active_new', models.IntegerField()),
                ('active_pct', models.FloatField(default=0)),
                ('active_pct_change', models.FloatField()),
                ('active_rank_region', models.IntegerField()),
                ('active_rank_world', models.IntegerField()),
                ('active_new_rank_region', models.IntegerField(default=0)),
                ('active_new_rank_world', models.IntegerField(default=0)),
                ('active_by_hundreds', models.FloatField(default=1)),
                ('active_by_hundreds_rank_region', models.IntegerField(default=1)),
                ('active_by_hundreds_rank_world', models.IntegerField(default=1)),
                ('mortality', models.FloatField(default=0)),
                ('mortality_quartile', models.CharField(default='4th quartile (very high mortality)', max_length=35)),
                ('mortality_quartile_position', models.FloatField(default=50.0)),
                ('mortality_rank_region', models.IntegerField(default=1000)),
                ('mortality_rank_world', models.IntegerField(default=1000)),
            ],
        ),
    ]
